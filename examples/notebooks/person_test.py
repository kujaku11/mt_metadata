# generated by datamodel-codegen:
#   filename:  person_schema.json
#   timestamp: 2025-04-02T04:44:06+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import BaseModel, EmailStr, Field, ConfigDict


class Person(BaseModel):
    model_config = ConfigDict(validate_assignment=True, validate_default=True)
    name: str = Field(
        description="Persons name, should be full first and last name.",
        examples="person name",
        title="name",
    )
    author: Optional[str] = Field(
        "",
        description="Persons name, should be full first and last name.",
        examples="person name",
        title="author",
    )
    organization: Optional[str] = Field(
        "",
        description="Organization full name",
        examples="mt gurus",
        title="organization",
    )
    email: Optional[EmailStr] = Field(
        None,
        description="Email of the contact person",
        examples="mt.guru@em.org",
        title="email",
    )
    url: Optional[str] = Field(
        None, description="URL of the contact person", examples="em.org", title="url"
    )
    comments: Optional[str] = Field(
        None,
        description="Any comments about the person",
        examples="expert digger",
        title="comments",
    )
    time: datetime = Field(
        ...,
        description="Any comments about the person",
        examples="expert digger",
        title="comments",
    )
